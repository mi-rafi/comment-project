// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Comment struct {
	Author string    `json:"author"`
	Text   string    `json:"text"`
	Time   time.Time `json:"time"`
}

type CommentConnection struct {
	ID       string   `json:"id"`
	ParentID *string  `json:"parentId,omitempty"`
	Level    int      `json:"level"`
	Comment  *Comment `json:"comment"`
	PostID   string   `json:"postId"`
}

type CommentsResult struct {
	Comments []*CommentConnection `json:"comments,omitempty"`
	PageInfo *PageInfo            `json:"pageInfo"`
}

type Mutation struct {
}

type NewComment struct {
	Author string    `json:"author"`
	Text   string    `json:"text"`
	Time   time.Time `json:"time"`
}

type NewPost struct {
	Author        string    `json:"author"`
	Title         string    `json:"title"`
	Text          string    `json:"text"`
	Time          time.Time `json:"time"`
	IsCommentable *bool     `json:"isCommentable,omitempty"`
}

type PageInfo struct {
	EndCursor *string `json:"endCursor,omitempty"`
}

type Post struct {
	ID            string          `json:"id"`
	Author        string          `json:"author"`
	Title         string          `json:"title"`
	Text          string          `json:"text"`
	Time          time.Time       `json:"time"`
	IsCommentable bool            `json:"isCommentable"`
	Comments      *CommentsResult `json:"comments,omitempty"`
}

type Query struct {
}

type ShortPost struct {
	ID     string `json:"id"`
	Author string `json:"author"`
	Title  string `json:"title"`
}

type Subscription struct {
}
